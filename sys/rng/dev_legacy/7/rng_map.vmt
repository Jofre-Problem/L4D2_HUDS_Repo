"VertexLitGeneric"
{

// -------------------- COPY BELOW HERE DIRECTLY INTO YOUR VMT TO ACTIVATE RNG

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	$distancePerFrame		"4000"
	$oneSkinPerMap		"0"		// The user can change this variable to only allow one skin per map
	$frameOffset		"0"		// Change this value to offset the frame that must show in SYS (useful if 2+ objects)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	$pos			"[0 0 0]"
	$posX			"0.0"
	$posY			"0.0"

	$time			"0"
	$timeOffset		"0"

	$rerollRaw		"0"
	$rerollRawStored		"0"
	$rerollRNG		"0"

	$randSYS		"0.0"		
	$prepareStore		"1000.0"
	$randSYSStored		"1000.0"
	$randSYSInject		"0.0"
	$randSYSOffset		"0.0"
	$randSYSOverflow		"0.0"

	$checkMax		"0.0"
	$maxFrame		"0.0"
	$maxFramePlusOne		"1.0"

	$countingFinished		"0.0"
	$injectFrame		"0.0"
	$RNGInjectFrame		"0.0"

	$distanceRollback		"0.0"

	$tempDIV			"0.0"
	$tempMULT		"0.0"
	$tempOFFSET		"0.25"
	$tempFRAC		"0.0"

	$mo			"-1"
	$zero			"0.0"
	$one			"1.0"
	$two			"2.0"
	$oh			"100"
	$fh			"500"
	$ot			"1000"
	$tt			"10000"


Proxies
{

	AnimatedTexture				
	{
		animatedtexturevar 			"$basetexture" 
		animatedtextureframenumvar		"$checkMax"	
		animatedtextureframerate		"25"
	}

	LessOrEqual
	{
		LessEqualVar 	"$maxFrame"
		greaterVar 	"$checkMax"
		srcVar1 		"$checkMax"
		srcVar2 		"$maxFrame"
		resultVar 		"$maxFrame"    
	}

	Add
	{
		srcVar1 		"$maxFrame"
		srcVar2 		"$one"
		resultVar 		"$maxFramePlusOne"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$one"
		greaterVar 	"$countingFinished"
		srcVar1 		"$checkMax"
		srcVar2 		"$zero"
		resultVar 		"$countingFinished"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$zero"
		greaterVar 	"$countingFinished"
		srcVar1 		"$maxFrame"
		srcVar2 		"$zero"
		resultVar 		"$countingFinished"    
	}

	Multiply
	{
		srcVar1 		"$distancePerFrame"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$distanceRollback"    
	}

	PlayerPosition
	{
		scale		1
		resultVar		"$pos"
	}

	Clamp 
	{
		srcVar1		"$zero"
		min		"$pos[0]"
		max		"$pos[0]"
		resultVar		"$posX"	
	}

	Abs
	{
		srcVar1		"$posX"
		resultVar		"$posX"	
	}	

	LessOrEqual
	{
		LessEqualVar 	"$posX"
		greaterVar 	"$timeOffset"
		srcVar1 		"$timeOffset"
		srcVar2 		"$zero"
		resultVar 		"$timeOffset"    
	}

	Clamp 
	{
		srcVar1		"$zero"
		min		"$pos[1]"
		max		"$pos[1]"
		resultVar		"$posY"	
	}

	Abs
	{
		srcVar1		"$posY"
		resultVar		"$posY"	
	}	

	Add
	{
		srcVar1 		"$posY"
		srcVar2 		"$posX"
		resultVar 		"$posY"    
	}

	Divide
	{
		srcVar1 		"$posY"
		srcVar2 		"$distanceRollback"
		resultVar 		"$posY"
	}

	Frac
	{
		srcVar1		"$posY"
		resultVar		"$posY"	
	}	

	Multiply
	{
		srcVar1 		"$posY"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$randSYS"
	}

	CurrentTime
	{
		resultVar		"$time"
	}

	Add
	{
		srcVar1 		"$time"
		srcVar2 		"$timeOffset"
		resultVar 		"$tempMULT"
	}

	Divide
	{
		srcVar1 		"$tempMULT"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$tempDIV"    
	}

	Frac
	{
		srcVar1		"$tempDIV"
		resultVar		"$tempDIV"	
	}	

	Multiply
	{
		srcVar1 		"$tempDIV"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$tempDIV"
	}

	LessOrEqual
	{
		LessEqualVar 	"$tempDIV"
		greaterVar 	"$randSYSOffset"
		srcVar1 		"$randSYSOffset"
		srcVar2 		"$zero"
		resultVar 		"$randSYSOffset"    
	}

	Add
	{
		srcVar1 		"$randSYSOffset"
		srcVar2 		"$randSYS"
		resultVar 		"$randSYS"
	}

	Subtract
	{
		srcVar1 		"$randSYS"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$randSYSOverflow"
	}

	LessOrEqual
	{
		LessEqualVar 	"$randSYS"
		greaterVar 	"$randSYSOverflow"
		srcVar1 		"$randSYS"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$randSYS"    
	}

	Add
	{
		srcVar1 		"$randSYS"
		srcVar2 		"$frameOffset"
		resultVar 		"$randSYS"
	}

	Subtract
	{
		srcVar1 		"$randSYS"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$randSYSOverflow"
	}

	LessOrEqual
	{
		LessEqualVar 	"$randSYS"
		greaterVar 	"$randSYSOverflow"
		srcVar1 		"$randSYS"
		srcVar2 		"$maxFramePlusOne"
		resultVar 		"$randSYS"    
	}

	ConVar			
	{
		convar		"cl_buy_favorite_nowarn"
		resultVar		"$rerollRaw"
	}

	Int
	{
		srcVar1 		"$rerollRaw"
		resultVar 		"$rerollRaw"    
	}

	Subtract
	{
		srcVar1 		"$rerollRaw"
		srcVar2 		"$rerollRawStored"
		resultVar 		"$rerollRNG"    
	}

	Abs
	{
		srcVar1		"$rerollRNG"
		resultVar		"$rerollRNG"	
	}

	Equals
	{
		srcVar1 		"$rerollRaw"
		resultVar 		"$rerollRawStored"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$randSYSOffset"
		greaterVar 	"$zero"
		srcVar1 		"$rerollRNG"
		srcVar2 		"$zero"
		resultVar 		"$randSYSOffset"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$randSYSStored"
		greaterVar 	"$ot"
		srcVar1 		"$rerollRNG"
		srcVar2 		"$zero"
		resultVar 		"$randSYSStored"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$prepareStore"
		greaterVar 	"$randSYS"
		srcVar1 		"$countingFinished"
		srcVar2 		"$zero"
		resultVar 		"$prepareStore"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$randSYSStored"
		greaterVar 	"$prepareStore"
		srcVar1 		"$randSYSStored"
		srcVar2 		"$fh"
		resultVar 		"$randSYSStored"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$randSYS"
		greaterVar 	"$randSYSStored"
		srcVar1 		"$oneSkinPerMap"
		srcVar2 		"$zero"
		resultVar 		"$randSYSInject"    
	}

	Multiply			
	{
		srcVar1 		"$countingFinished"
		srcVar2 		"$randSYSInject"
		resultVar 		"$injectFrame"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$frame"
		greaterVar 	"$randSYSInject"
		srcVar1 		"$injectFrame"
		srcVar2 		"$zero"
		resultVar 		"$frame"    
	}

	LessOrEqual
	{
		LessEqualVar 	"$frame"
		greaterVar 	"$maxframe"
		srcVar1 		"$frame"
		srcVar2 		"$maxframe"
		resultVar 		"$frame"
	}



}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// -------------------- COPY ABOVE HERE DIRECTLY INTO YOUR VMT TO ACTIVATE RNG


}
