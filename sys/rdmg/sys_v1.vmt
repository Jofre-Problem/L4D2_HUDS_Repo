"VertexLitGeneric"
{
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//      ___ ___  _      ___   __  ____     _       _ __   __  __  __        ___ _  _ ___ __  _ 
//    / __|   __| |  |    |   __|/ __|  _   _|    \ \   / / _ \  |   |  |   |   _ \    / __|   |/ /_  _| |  \ | |
//    \__ \   _|  |  |__|   _|     (__   |  |         \ V /  (_)   |   |_|   |      /    \__ \ ' <    |  |   | . `  |
//    |___/___|  |___|___\ ___|   |_|           |_| \___/ \_ __/|_| _\    |___/_|\_\__|  |_|\_|
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  ++  SPECIAL BLOOD MODULE for SYS (see RDMG) ++ 
//
//  By Ellie, ask your questions here : https://steamcommunity.com/id/ellie_williams/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	$frame			"0"
	$detailframe		"0"
	$bumpframe		"0"

// .................................................................................

	$detail			"models\infected\hunter\hunter_01_detail"
	$detailblendmode		"0"

	$ScaleBlood		"0.5"
	$canOnlyGetWorse		"0"

// ---------------------------------------------- RNG

	$mo			"-1"
	$zero			"0.0"
	$one			"1.0"
	$two			"2.0"
	$four			"4"
	$six			"6"
	$oh			"100"


// ---------------------------------------------- REALISTIC DAMAGE VARIABLES

	$time			"0"
	$isEntity			"0"

	$CenterDET		"0.5"

	$pos 			"[0 0 0]"

	$posX			.0
	$posXDELTA		.0
	$posXStored		.0
	$posY			.0
	$posYDELTA		.0
	$posYStored		.0

	$entityorigin		"[0 0 0]"
	$posTOLERANCE		600.0
	$isNearTheStart		"0"

	$healthCurrent		"100"
	$worstHealth		"100"
	$healthPercent		"100"

	$hasTakenDamage		"0"

	$noInjectWorstHealth	0	
	$worstHealthToInject	0	
	$mustHeal		0	
		
	$mapRestartTPK		0	

	$ismoving			0
	$playerSpeed		0

	$dbftoInvert		"0"
	$dbftodisplay		"0"
	$dbftoinject		"0"

	$isdown			"0"
	
Proxies
{


//////////////////////////////////////////////////////////////////////////////////////////////////////
//	BLOCK 5 : REALISTIC DAMAGE
//////////////////////////////////////////////////////////////////////////////////////////////////////

	CurrentTime
	{
		resultVar		"$time"
	}

	EntityRandom
	{
          	 	scale		"359"         
          	 	resultVar 		"$isEntity"  
	}

	TextureTransform
	{
		centerVar		"$CenterDET"
		scaleVar		"$ScaleBlood"
		rotateVar		"$isEntity"
		translateVar	"$isEntity"
		resultVar		"$detailtexturetransform"
	}

        	PlayerPosition
        	{
                	scale                    	1
                	resultVar               	"$pos"
        	}

        	Clamp
        	{
		srcVar1		"$zero"
		min		"$pos[0]"
		max		"$pos[0]"
		resultVar		"$posX"	
        	}

        	Clamp
        	{
		srcVar1		"$zero"
		min		"$pos[1]"
		max		"$pos[1]"
		resultVar		"$posY"	
        	}

	Abs
	{
		srcVar1		"$posX"
		resultVar		"$posX"	
	}

	Abs
	{
		srcVar1		"$posY"
		resultVar		"$posY"	
	}	

	LessOrEqual
	{
		LessEqualVar 	"$posX" 
		greaterVar 	"$posXStored"
		srcVar1		"$posXStored"
		srcVar2		"$zero"
		resultVar		"$posXStored"
	}


	LessOrEqual
	{
		LessEqualVar 	"$posY" 
		greaterVar 	"$posYStored"
		srcVar1		"$posYStored"
		srcVar2		"$zero"
		resultVar		"$posYStored"
	}

	Subtract
	{
		srcVar1		"$posXStored"
		srcVar2		"$posX"
		resultVar		"$posXDELTA"
	}

	Subtract
	{
		srcVar1		"$posYStored"
		srcVar2		"$posY"
		resultVar		"$posYDELTA"
	}

        	Abs
        	{
		srcVar1		"$posXDELTA"
		resultVar		"$posXDELTA"	
        	}

        	Abs
        	{
		srcVar1		"$posYDELTA"
		resultVar		"$posYDELTA"	
        	}


	LessOrEqual
	{
		LessEqualVar 	"$one" 
		greaterVar 	"$zero"
		srcVar1		"$posXDELTA"
		srcVar2		"$posTOLERANCE"
		resultVar		"$isNearTheStart"
	}

	LessOrEqual
	{
		LessEqualVar 	"$isNearTheStart" 
		greaterVar 	"$zero"
		srcVar1		"$posYDELTA"
		srcVar2		"$posTOLERANCE"
		resultVar		"$isNearTheStart"
	}

	Health
	{
		scale 		"$oh" 
		resultVar 		"$healthCurrent"
	}

	LessOrEqual
	{
		LessEqualVar 	"$one" 
		greaterVar 	"$zero"
		srcVar1		"$healthCurrent"
		srcVar2		"$zero"
		resultVar		"$noInjectWorstHealth"
	}

	LessOrEqual
	{
		LessEqualVar 	"$healthCurrent" 
		greaterVar 	"$worstHealth"
		srcVar1		"$healthCurrent"
		srcVar2		"$worstHealth"
		resultVar		"$worstHealthToInject"
	}

	LessOrEqual
	{
		LessEqualVar 	"$worstHealthToInject" 
		greaterVar 	"$worstHealth"
		srcVar1		"$noInjectWorstHealth"
		srcVar2		"$zero"
		resultVar		"$worstHealth"
	}

	EntitySpeed
	{
		resultVar		"$ismoving" 
	}	

	PlayerSpeed
	{
		resultVar		"$playerSpeed"
	}


	LessOrEqual
	{
		LessEqualVar 	"$hasTakenDamage" 
		greaterVar 	"$zero"
		srcVar1		"$healthCurrent"
		srcVar2		"$oh"
		resultVar		"$hasTakenDamage"
	}
				
	LessOrEqual
	{
		LessEqualVar 	"$hasTakenDamage" 
		greaterVar 	"$one"
		srcVar1		"$oh"
		srcVar2		"$worstHealth"
		resultVar		"$hasTakenDamage"
	}	

	LessOrEqual
	{
		LessEqualVar 	"$one" 
		greaterVar 	"$zero"
		srcVar1		"$oh"
		srcVar2		"$healthCurrent"
		resultVar		"$mapRestartTPK"
	}

	LessOrEqual
	{
		LessEqualVar 	"$zero" 
		greaterVar 	"$mapRestartTPK"
		srcVar1		"$isNearTheStart"
		srcVar2		"$zero"
		resultVar		"$mapRestartTPK"
	}

	LessOrEqual
	{
		LessEqualVar 	"$zero" 
		greaterVar 	"$mapRestartTPK"
		srcVar1		"$time"
		srcVar2		"$oh"
		resultVar		"$mapRestartTPK"
	}

	LessOrEqual		
	{
		LessEqualVar 	"$worstHealth" 
		greaterVar 	"$oh"
		srcVar1		"$mapRestartTPK"
		srcVar2		"$zero"
		resultVar		"$worstHealth"
	}

	LessOrEqual		
	{
		LessEqualVar 	"$hasTakenDamage" 
		greaterVar 	"$zero"
		srcVar1		"$mapRestartTPK"
		srcVar2		"$zero"
		resultVar		"$hasTakenDamage"
	}

	LessOrEqual
	{
		LessEqualVar 	"$healthCurrent" 
		greaterVar 	"$worstHealth"
		srcVar1		"$canOnlyGetWorse"
		srcVar2		"$zero"
		resultVar		"$healthPercent"
	}

	Divide
	{
		srcVar1		"$healthPercent"
		srcVar2		"$oh"
		resultVar		"$dbftoInvert"
	}

	Subtract
	{
		srcVar1		"$one"
		srcVar2		"$dbftoInvert"
		resultVar		"$dbftodisplay"
	}
	
	LessOrEqual
	{
		LessEqualVar 	"$isdown" 
		greaterVar 	"$zero"
		srcVar1		"$playerSpeed"
		srcVar2		"$zero"
		resultVar		"$isdown"
	}			

	LessOrEqual
	{

		LessEqualVar 	"$hasTakenDamage" 
		greaterVar 	"$isdown"
		srcVar1		"$oh"
		srcVar2		"$healthCurrent"
		resultVar		"$isdown"
	}		

	LessOrEqual
	{
		LessEqualVar 	"$mustHeal" 
		greaterVar 	"$one"
		srcVar1		"$isdown"
		srcVar2		"$zero"
		resultVar		"$mustHeal"
	}	

	LessOrEqual
	{
		LessEqualVar 	"$mustHeal" 
		greaterVar 	"$zero"
		srcVar1		"$ismoving"
		srcVar2		"$zero"
		resultVar		"$mustHeal"
	}

	LessOrEqual
	{
		LessEqualVar 	"$isdown" 
		greaterVar 	"$one"
		srcVar1		"$mustHeal"
		srcVar2		"$zero"
		resultVar		"$isdown"
	}			

	LessOrEqual
	{			
		LessEqualVar 	"$isdown" 
		greaterVar 	"$zero"
		srcVar1		"$mapRestartTPK"
		srcVar2		"$zero"
		resultVar		"$isdown"
	}	

	LessOrEqual
	{
		LessEqualVar 	"$isdown" 
		greaterVar 	"$zero"
		srcVar1		"$ismoving"
		srcVar2		"$zero"
		resultVar		"$isdown"
	}

	LessOrEqual
	{
		LessEqualVar 	"$dbftodisplay" 
		greaterVar 	"$detailblendfactor"
		srcVar1		"$isdown"
		srcVar2		"$zero"
		resultVar		"$dbftoinject"
	}		

	Multiply
	{
		srcVar1		"$dbftoinject"
		srcVar2		"$six"
		resultVar		"$dbftoinject"
	}

	Subtract
	{
		srcVar1		"$dbftoinject"
		srcVar2		"$four"
		resultVar		"$dbftoinject"
	}

	LessOrEqual
	{
		LessEqualVar 	"$zero" 
		greaterVar 	"$dbftoinject"
		srcVar1		"$dbftoinject"
		srcVar2		"$zero"
		resultVar		"$dbftoinject"
	}

	LessOrEqual
	{
		LessEqualVar 	"$dbftoinject" 
		greaterVar 	"$one"
		srcVar1		"$dbftoinject"
		srcVar2		"$one"
		resultVar		"$dbftoinject"
	}

	LessOrEqual
	{
		LessEqualVar 	"$detailblendfactor" 
		greaterVar 	"$dbftoinject"
		srcVar1		"$isEntity"
		srcVar2		"$zero"
		resultVar		"$detailblendfactor"		// THIS IS THE FINAL INJECTION OF $DETAILBLENDFACTOR
	}


}

}
